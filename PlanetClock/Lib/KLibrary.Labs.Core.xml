<?xml version="1.0"?>
<doc>
    <assembly>
        <name>KLibrary.Labs.Core</name>
    </assembly>
    <members>
        <member name="T:KLibrary.Labs.Mathematics.FrequencyFilter">
            <summary>
            Represents a filter to suppress the frequency.
            </summary>
            <remarks>
            Call the <see cref="M:KLibrary.Labs.Mathematics.FrequencyFilter.CheckLap"/> method on each frame, then <see cref="P:KLibrary.Labs.Mathematics.FrequencyFilter.ArrangedFrequency"/> will be recalculated.
            The return value of the <see cref="M:KLibrary.Labs.Mathematics.FrequencyFilter.CheckLap"/> method indicates whether the frame is available.
            </remarks>
        </member>
        <member name="M:KLibrary.Labs.Mathematics.FrequencyFilter.#ctor(System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:KLibrary.Labs.Mathematics.FrequencyFilter"/> class.
            </summary>
            <param name="maxFrequency">The maximum frequency.</param>
        </member>
        <member name="M:KLibrary.Labs.Mathematics.FrequencyFilter.#ctor(System.Double,System.Int32,System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:KLibrary.Labs.Mathematics.FrequencyFilter"/> class using the specified options.
            </summary>
            <param name="maxFrequency">The maximum frequency.</param>
            <param name="historyMaxCount">The maximum count of the history items.</param>
            <param name="historyMaxSpan">The maximum time span of the history.</param>
        </member>
        <member name="M:KLibrary.Labs.Mathematics.FrequencyFilter.CheckLap">
            <summary>
            Records a time stamp, and filters the current lap.
            </summary>
            <returns><see langword="true"/> if the current lap is available; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="P:KLibrary.Labs.Mathematics.FrequencyFilter.MaxFrequency">
            <summary>
            Gets or sets the maximum frequency.
            </summary>
        </member>
        <member name="P:KLibrary.Labs.Mathematics.FrequencyFilter.ArrangedFrequency">
            <summary>
            Gets the arranged frequency. The value is less than or equal to <see cref="P:KLibrary.Labs.Mathematics.FrequencyFilter.MaxFrequency"/>.
            </summary>
        </member>
        <member name="T:KLibrary.Labs.Mathematics.FrequencyMeter">
            <summary>
            Measures the frequency.
            </summary>
            <remarks>
            Call the <see cref="M:KLibrary.Labs.Mathematics.FrequencyMeter.RecordLap"/> method on each frame.
            </remarks>
        </member>
        <member name="M:KLibrary.Labs.Mathematics.FrequencyMeter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:KLibrary.Labs.Mathematics.FrequencyMeter"/> class.
            </summary>
        </member>
        <member name="M:KLibrary.Labs.Mathematics.FrequencyMeter.#ctor(System.Int32,System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:KLibrary.Labs.Mathematics.FrequencyMeter"/> class using the specified options.
            </summary>
            <param name="historyMaxCount">The maximum count of the history items.</param>
            <param name="historyMaxSpan">The maximum time span of the history.</param>
        </member>
        <member name="M:KLibrary.Labs.Mathematics.FrequencyMeter.RecordLap">
            <summary>
            Records a time stamp, and measures the frequency.
            </summary>
            <returns>The measured frequency.</returns>
        </member>
        <member name="P:KLibrary.Labs.Mathematics.FrequencyMeter.Frequency">
            <summary>
            Gets the frequency in which the <see cref="M:KLibrary.Labs.Mathematics.FrequencyMeter.RecordLap"/> method was called.
            </summary>
        </member>
        <member name="T:KLibrary.Labs.Mathematics.Polynomial">
            <summary>
            Represents a polynomial with a single variable.
            </summary>
            <remarks>
            The dictionary does not contain entries whose coefficient is 0.
            TODO: Check if each coefficient in Dictionary is not 0 (pass through when accessed internally).
            </remarks>
        </member>
        <member name="F:KLibrary.Labs.Mathematics.Polynomial.X">
            <summary>
            Represents the variable x.
            </summary>
        </member>
        <member name="M:KLibrary.Labs.Mathematics.Polynomial.#ctor(System.Collections.Generic.IDictionary{System.Int32,System.Double})">
            <summary>
            Initializes a new instance of the <see cref="T:KLibrary.Labs.Mathematics.Polynomial"/> structure.
            </summary>
            <param name="coefficients">The dictionary which represents index/coefficient pairs.</param>
        </member>
        <member name="M:KLibrary.Labs.Mathematics.Polynomial.op_Addition(KLibrary.Labs.Mathematics.Polynomial,KLibrary.Labs.Mathematics.Polynomial)">
            <summary>
            Adds two polynomials.
            </summary>
            <param name="p1">The first polynomial.</param>
            <param name="p2">The second polynomial.</param>
            <returns>The sum of two polynomials.</returns>
        </member>
        <member name="M:KLibrary.Labs.Mathematics.Polynomial.op_Subtraction(KLibrary.Labs.Mathematics.Polynomial,KLibrary.Labs.Mathematics.Polynomial)">
            <summary>
            Subtracts one specified polynomial from another.
            </summary>
            <param name="p1">The polynomial.</param>
            <param name="p2">The polynomial to subtract.</param>
            <returns>The difference of two polynomials.</returns>
        </member>
        <member name="M:KLibrary.Labs.Mathematics.Polynomial.op_ExclusiveOr(KLibrary.Labs.Mathematics.Polynomial,System.Int32)">
            <summary>
            Returns the specified power of the specified polynomial.
            </summary>
            <param name="p">The polynomial.</param>
            <param name="power">The power.</param>
            <returns>The calculated value.</returns>
        </member>
        <member name="M:KLibrary.Labs.Mathematics.Polynomial.op_Equality(KLibrary.Labs.Mathematics.Polynomial,KLibrary.Labs.Mathematics.Polynomial)">
            <summary>
            Compares two polynomials for equality.
            </summary>
            <param name="p1">The first polynomial.</param>
            <param name="p2">The second polynomial.</param>
            <returns><see langword="true"/> if two polynomials are equal; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:KLibrary.Labs.Mathematics.Polynomial.op_Inequality(KLibrary.Labs.Mathematics.Polynomial,KLibrary.Labs.Mathematics.Polynomial)">
            <summary>
            Compares two polynomials for inequality.
            </summary>
            <param name="p1">The first polynomial.</param>
            <param name="p2">The second polynomial.</param>
            <returns><see langword="true"/> if two polynomials are different; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:KLibrary.Labs.Mathematics.Polynomial.Equals(System.Object)">
            <summary>
            Compares the specified object to this polynomial.
            </summary>
            <param name="obj">The object to compare.</param>
            <returns><see langword="true"/> if the object is a <see cref="T:KLibrary.Labs.Mathematics.Polynomial"/> and is equal to this polynomial; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:KLibrary.Labs.Mathematics.Polynomial.GetHashCode">
            <summary>
            Returns the hash code for this polynomial.
            </summary>
            <returns>The hash code for this polynomial.</returns>
        </member>
        <member name="M:KLibrary.Labs.Mathematics.Polynomial.ToString">
            <summary>
            Returns the string which represents this polynomial.
            </summary>
            <returns>The string which represents this polynomial.</returns>
        </member>
        <member name="M:KLibrary.Labs.Mathematics.Polynomial.Substitute(System.Double)">
            <summary>
            Substitutes the specified value into this polynomial.
            </summary>
            <param name="value">The value to substitute.</param>
            <returns>The calculated value.</returns>
        </member>
        <member name="M:KLibrary.Labs.Mathematics.Polynomial.SolveLinearEquation">
            <summary>
            Solve the linear equation whose left operand is this polynomial and right operand is 0.
            </summary>
            <returns>The solution.</returns>
        </member>
        <member name="M:KLibrary.Labs.Mathematics.Polynomial.SolveQuadraticEquation">
            <summary>
            Solve the quadratic equation whose left operand is this polynomial and right operand is 0.
            </summary>
            <returns>The solution.</returns>
        </member>
        <member name="P:KLibrary.Labs.Mathematics.Polynomial.Coefficients">
            <summary>
            Gets the dictionary which represents index/coefficient pairs.
            </summary>
            <value>The dictionary which represents index/coefficient pairs.</value>
        </member>
        <member name="P:KLibrary.Labs.Mathematics.Polynomial.Degree">
            <summary>
            Gets the degree of the polynomial.
            </summary>
            <value>The degree of the polynomial.</value>
        </member>
        <member name="P:KLibrary.Labs.Mathematics.Polynomial.Item(System.Int32)">
            <summary>
            Gets the coefficient for the specified index.
            </summary>
            <param name="index">The index of the variable.</param>
            <returns>The coefficient for the specified index.</returns>
        </member>
        <member name="T:KLibrary.Labs.Maybe`1">
            <summary>
            Represents a value type that can be assigned the unset state.
            </summary>
            <typeparam name="T">The underlying value type.</typeparam>
        </member>
        <member name="F:KLibrary.Labs.Maybe`1.None">
            <summary>
            Represents the unset state.
            </summary>
        </member>
        <member name="T:KLibrary.Labs.Reactive.Models.IObservableProperty`1">
            <summary>
            Represents an IObservable-based settable property, which notifies the value has been changed.
            </summary>
            <typeparam name="T">The type of the property.</typeparam>
        </member>
        <member name="P:KLibrary.Labs.Reactive.Models.IObservableProperty`1.Value">
            <summary>
            Gets or sets the value of the property.
            </summary>
        </member>
        <member name="T:KLibrary.Labs.Reactive.Models.IObservableGetProperty`1">
            <summary>
            Represents an IObservable-based get-only property, which notifies the value has been changed.
            </summary>
            <typeparam name="T">The type of the property.</typeparam>
        </member>
        <member name="M:KLibrary.Labs.Reactive.Models.IObservableGetProperty`1.OnNext">
            <summary>
            Notifies this object to update the value.
            </summary>
        </member>
        <member name="P:KLibrary.Labs.Reactive.Models.IObservableGetProperty`1.Value">
            <summary>
            Gets the value of the property.
            </summary>
        </member>
        <member name="T:KLibrary.Labs.Reactive.IObservableEvent`1">
            <summary>
            Represents an IObservable-based event.
            </summary>
            <typeparam name="T">The type of objects to be provided.</typeparam>
        </member>
        <member name="P:KLibrary.Labs.Reactive.IObservableEvent`1.HasObservers">
            <summary>
            Gets a value indicating whether this observable object has observers.
            </summary>
        </member>
        <member name="T:KLibrary.Labs.Reactive.Models.ObservableProperty">
            <summary>
            Provides a set of static methods for the observable property model.
            </summary>
        </member>
        <member name="M:KLibrary.Labs.Reactive.Models.ObservableProperty.Create``1">
            <summary>
            Creates an instance of <see cref="T:KLibrary.Labs.Reactive.Models.IObservableProperty`1"/> with the default value of <typeparamref name="TSource"/>.
            </summary>
            <typeparam name="TSource">The type of the property.</typeparam>
            <returns>An <see cref="T:KLibrary.Labs.Reactive.Models.IObservableProperty`1"/> object.</returns>
        </member>
        <member name="M:KLibrary.Labs.Reactive.Models.ObservableProperty.Create``1(``0)">
            <summary>
            Creates an instance of <see cref="T:KLibrary.Labs.Reactive.Models.IObservableProperty`1"/> with the specified default value.
            </summary>
            <typeparam name="TSource">The type of the property.</typeparam>
            <param name="defaultValue">The default value.</param>
            <returns>An <see cref="T:KLibrary.Labs.Reactive.Models.IObservableProperty`1"/> object.</returns>
        </member>
        <member name="M:KLibrary.Labs.Reactive.Models.ObservableProperty.CreateGet``1(System.Func{``0})">
            <summary>
            Creates an instance of <see cref="T:KLibrary.Labs.Reactive.Models.IObservableGetProperty`1"/> with the return value of <paramref name="getValue"/> as the default value.
            </summary>
            <typeparam name="TSource">The type of the property.</typeparam>
            <param name="getValue">The function to get a new property value.</param>
            <returns>An <see cref="T:KLibrary.Labs.Reactive.Models.IObservableGetProperty`1"/> object.</returns>
        </member>
        <member name="M:KLibrary.Labs.Reactive.Models.ObservableProperty.CreateGet``1(System.Func{``0},``0)">
            <summary>
            Creates an instance of <see cref="T:KLibrary.Labs.Reactive.Models.IObservableGetProperty`1"/> with the specified default value.
            </summary>
            <typeparam name="TSource">The type of the property.</typeparam>
            <param name="getValue">The function to get a new property value.</param>
            <param name="defaultValue">The default value.</param>
            <returns>An <see cref="T:KLibrary.Labs.Reactive.Models.IObservableGetProperty`1"/> object.</returns>
        </member>
        <member name="M:KLibrary.Labs.Reactive.Models.ObservableProperty.CreateGetDirect``1(System.Func{``0})">
            <summary>
            Creates an instance of <see cref="T:KLibrary.Labs.Reactive.Models.IObservableGetProperty`1"/>.
            The property value is not cached, so is evaluated for every access.
            </summary>
            <typeparam name="TSource">The type of the property.</typeparam>
            <param name="getValue">The function to get a new property value.</param>
            <returns>An <see cref="T:KLibrary.Labs.Reactive.Models.IObservableGetProperty`1"/> object.</returns>
        </member>
        <member name="M:KLibrary.Labs.Reactive.Models.ObservableProperty.CreateEvent``1">
            <summary>
            Creates an instance of <see cref="T:KLibrary.Labs.Reactive.IObservableEvent`1"/>.
            </summary>
            <typeparam name="TSource">The type of objects to be provided.</typeparam>
            <returns>An <see cref="T:KLibrary.Labs.Reactive.IObservableEvent`1"/> object.</returns>
        </member>
    </members>
</doc>
